<Window x:Class="MikroTikAdmin.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewmodels="clr-namespace:WpfAppTemplate.ViewModels"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        d:DataContext="{d:DesignInstance Type=viewmodels:MainViewModel}"
        mc:Ignorable="d"
        Style="{StaticResource MaterialDesignWindow}"
        WindowStartupLocation="CenterScreen"
        WindowState="Maximized"
        Title="{DynamicResource appTitle}"
        d:Height="450"
        d:Width="800">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- data template used for the dialogs example, defines a View for a ViewModel of type DateTime -->
            <DataTemplate DataType="{x:Type system:DateTime}">
                <StackPanel Margin="16">
                    <TextBlock Text="England win the World Cup:" />
                    <TextBlock Margin="0,8,0,0"
                               Text="{Binding}" />
                    <TextBlock Margin="0,8,0,0"
                               Text="You will never see that again." />
                    <Button Margin="0,8,0,0"
                            Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                            Content="AWESOME"
                            IsDefault="True"
                            Style="{StaticResource MaterialDesignFlatButton}" />
                </StackPanel>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="36"
                      ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" />
    </WindowChrome.WindowChrome>
    <materialDesign:DialogHost DialogTheme="Inherit"
                               Identifier="RootDialog">
        <Grid Margin="4,4,4,8">
            <Grid.RowDefinitions>
                <!--  Title bar  -->
                <RowDefinition Height="34" />

                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="1*" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <!--  Title bar  -->
            <Grid Margin="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}"
                                         Value="False">
                                <Setter Property="Background"
                                        Value="{DynamicResource WindowTitleBarInactiveBackground}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.Resources>
                    <SolidColorBrush x:Key="MouseOverWindowCloseButtonBackgroundBrush"
                                     Color="#E81123" />
                    <SolidColorBrush x:Key="MouseOverWindowCloseButtonForegroundBrush"
                                     Color="#FFFFFF" />
                    <SolidColorBrush x:Key="PressedWindowCloseButtonBackgroundBrush"
                                     Color="#F1707A" />

                    <SolidColorBrush x:Key="MouseOverOverlayBackgroundBrush"
                                     Color="#33000000" />
                    <SolidColorBrush x:Key="PressedOverlayBackgroundBrush"
                                     Color="#44000000" />

                    <!--dark-->
                    <!--<SolidColorBrush x:Key="MouseOverOverlayBackgroundBrush"
                 Color="#33FFFFFF" />
<SolidColorBrush x:Key="PressedOverlayBackgroundBrush"
                 Color="#44FFFFFF" />-->

                    <Style x:Key="TitleBarButtonStyle"
                           TargetType="Button">

                        <!--<Setter Property="Foreground"
            Value="{DynamicResource WindowTextBrush}" />-->
                        <Setter Property="Foreground"
                                Value="{DynamicResource MaterialDesign.Brush.Foreground}" />
                        <Setter Property="Padding"
                                Value="0" />
                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome"
                                Value="True" />
                        <Setter Property="IsTabStop"
                                Value="False" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="contentPresenter"
                                                          Margin="0"
                                                          HorizontalAlignment="Center"
                                                          VerticalAlignment="Center"
                                                          Focusable="False"
                                                          RecognizesAccessKey="True" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver"
                                                 Value="true">
                                            <Setter TargetName="border"
                                                    Property="Background"
                                                    Value="{DynamicResource MouseOverOverlayBackgroundBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsPressed"
                                                 Value="true">
                                            <Setter TargetName="border"
                                                    Property="Background"
                                                    Value="{DynamicResource PressedOverlayBackgroundBrush}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="TitleBarCloseButtonStyle"
                           TargetType="Button">
                        <Setter Property="Foreground"
                                Value="{DynamicResource MaterialDesign.Brush.Foreground}" />
                        <Setter Property="Padding"
                                Value="0" />
                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome"
                                Value="True" />
                        <Setter Property="IsTabStop"
                                Value="False" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="contentPresenter"
                                                          Margin="0"
                                                          HorizontalAlignment="Center"
                                                          VerticalAlignment="Center"
                                                          Focusable="False"
                                                          RecognizesAccessKey="True" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver"
                                                 Value="true">
                                            <Setter TargetName="border"
                                                    Property="Background"
                                                    Value="{DynamicResource MouseOverWindowCloseButtonBackgroundBrush}" />
                                            <Setter Property="Foreground"
                                                    Value="{DynamicResource MouseOverWindowCloseButtonForegroundBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsPressed"
                                                 Value="true">
                                            <Setter TargetName="border"
                                                    Property="Background"
                                                    Value="{DynamicResource PressedWindowCloseButtonBackgroundBrush}" />
                                            <Setter Property="Foreground"
                                                    Value="{DynamicResource MouseOverWindowCloseButtonForegroundBrush}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Grid.Resources>
                <StackPanel Grid.Column="0"
                            Margin="2"
                            Orientation="Horizontal">
                    <materialDesign:PackIcon Width="22"
                                             Height="22"
                                             VerticalAlignment="Center"
                                             Kind="ShieldBugOutline" />
                    <Menu materialDesign:MenuAssist.TopLevelMenuItemHeight="18"
                          WindowChrome.IsHitTestVisibleInChrome="True"
                          VerticalAlignment="Center"
                          IsMainMenu="True"
                          FontSize="14"
                          FontWeight="Light">
                        <MenuItem Header="{DynamicResource file}">
                            <MenuItem Header="{DynamicResource openDirectory}"
                                      Command="{Binding LoadDatabaseCommand}" />
                            <MenuItem Header="{DynamicResource saveToEcxel}"
                                      Command="{Binding SaveReport}" />
                        </MenuItem>
                    </Menu>
                    <Menu materialDesign:MenuAssist.TopLevelMenuItemHeight="18"
                          WindowChrome.IsHitTestVisibleInChrome="True"
                          VerticalAlignment="Center"
                          IsMainMenu="True"
                          FontSize="14"
                          FontWeight="Light">
                        <MenuItem Header="{DynamicResource settings}">
                            <MenuItem Header="{DynamicResource theme}">
                                <RadioButton Content="{DynamicResource liteTheme}" />
                                <RadioButton Content="{DynamicResource darkTheme}"
                                             IsChecked="{Binding IsDarkTheme}" />
                            </MenuItem>
                            <MenuItem Header="{DynamicResource language}">
                                <MenuItem DataContext="{Binding CultureViewModel}">
                                    <MenuItem.Template>
                                        <ControlTemplate>
                                            <ListBox Style="{StaticResource MaterialDesignToolVerticalToggleListBox}"
                                                     ItemsSource="{Binding Languages}"
                                                     SelectedValue="{Binding CurrentLanguage}">
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding DisplayName}"
                                                                   HorizontalAlignment="Stretch"
                                                                   TextAlignment="Left" />
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                            </ListBox>
                                        </ControlTemplate>
                                    </MenuItem.Template>
                                </MenuItem>
                            </MenuItem>
                        </MenuItem>
                    </Menu>
                </StackPanel>

                <TextBlock Grid.Column="1"
                           Margin="4 0 0 1"
                           FontWeight="Bold"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Text="{DynamicResource appTitle}" />


                <Button Grid.Column="2"
                        Click="OnMinimizeButtonClick"
                        RenderOptions.EdgeMode="Aliased"
                        Style="{StaticResource TitleBarButtonStyle}">
                    <Path Width="46"
                          Height="32"
                          Data="M 18,15 H 28"
                          Stroke="{Binding Path=Foreground,
         RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                          StrokeThickness="1" />
                </Button>
                <Button Name="maximizeButton"
                        Grid.Column="3"
                        Click="OnMaximizeRestoreButtonClick"
                        Style="{StaticResource TitleBarButtonStyle}">
                    <Path Width="46"
                          Height="32"
                          Data="M 18.5,10.5 H 27.5 V 19.5 H 18.5 Z"
                          Stroke="{Binding Path=Foreground,
         RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                          StrokeThickness="1" />
                </Button>
                <Button Name="restoreButton"
                        Grid.Column="3"
                        Click="OnMaximizeRestoreButtonClick"
                        Style="{StaticResource TitleBarButtonStyle}">
                    <Path Width="46"
                          Height="32"
                          Data="M 18.5,12.5 H 25.5 V 19.5 H 18.5 Z M 20.5,12.5 V 10.5 H 27.5 V 17.5 H 25.5"
                          Stroke="{Binding Path=Foreground,
         RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                          StrokeThickness="1" />
                </Button>
                <Button Grid.Column="4"
                        Click="OnCloseButtonClick"
                        Style="{StaticResource TitleBarCloseButtonStyle}">
                    <Path Width="46"
                          Height="32"
                          Data="M 18,11 27,20 M 18,20 27,11"
                          Stroke="{Binding Path=Foreground,
         RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                          StrokeThickness="1" />
                </Button>
            </Grid>

            <!--toolbar-->
            <ToolBarTray Grid.Row="1"
                         Grid.RowSpan="2">
                <ToolBar ClipToBounds="False"
                         Style="{StaticResource MaterialDesignToolBar}">
                    <Button Margin="0,0,0,0"
                            materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                            Command="{Binding LoadDataCommand}"
                            Content="{materialDesign:PackIcon Kind=FolderPlus, Size=24}"
                            Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                            Style="{StaticResource MaterialDesignToolButton}"
                            ToolTip="{DynamicResource openDirectory}" />

                    <Button Margin="16,0,0,0"
                            materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                            Command="{Binding SaveCommand}"
                            Content="{materialDesign:PackIcon Kind=ContentSave, Size=24}"
                            Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                            Style="{StaticResource MaterialDesignToolButton}"
                            ToolTip="{DynamicResource saveToEcxel}" />
                </ToolBar>
            </ToolBarTray>
            <Border Grid.Row="3"
                    BorderBrush="{DynamicResource MaterialDesign.Brush.ForegroundLight}"
                    BorderThickness="1">
                <materialDesign:DrawerHost Grid.Row="3">
                    <DockPanel>
                        <materialDesign:Card>
                            <TabControl TabStripPlacement="Bottom"
                                        SelectedIndex="{Binding SelectedTabIndex}">
                                <TabItem Header="{DynamicResource tablHeader1}">
                                    <ContentControl Margin="8"
                                                    Content="{Binding ContentTab, UpdateSourceTrigger=PropertyChanged, FallbackValue={x:Null}}"
                                                    DataContextChanged="OnSelectedItemChanged" />
                                </TabItem>
                                <TabItem Header="{DynamicResource tablHeader2}">
                                    <ContentControl Margin="8"
                                                    Content="{Binding ContentTab, UpdateSourceTrigger=PropertyChanged, FallbackValue={x:Null}}"
                                                    DataContextChanged="OnSelectedItemChanged" />
                                </TabItem>
                                <TabItem Header="{DynamicResource tablHeader3}">
                                    <ContentControl Margin="8"
                                                    Content="{Binding ContentTab, UpdateSourceTrigger=PropertyChanged, FallbackValue={x:Null}}"
                                                    DataContextChanged="OnSelectedItemChanged" />
                                </TabItem>
                            </TabControl>
                        </materialDesign:Card>
                    </DockPanel>
                </materialDesign:DrawerHost>
            </Border>
        </Grid>
    </materialDesign:DialogHost>
</Window>